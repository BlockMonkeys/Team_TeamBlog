{"version":3,"sources":["actions/types.js","actions/user_action.js","Components/Login/Login.js","Components/Login/Logout.js","Components/Header/Header.js","actions/post_action.js","Components/LandingPage/Sections/LandingCards.js","Components/LandingPage/Sections/Category.js","Components/LandingPage/Sections/LandingCarousel.js","Components/LandingPage/LandingPage.js","kakaoQR.PNG","Components/Contact/Contact.js","Components/Introduce/Introduce.js","Components/Portfolio/Portfolio.js","Components/Footer/Footer.js","Components/Detail/Sections/Like.js","Components/Detail/Sections/Reply.js","Components/Detail/Sections/Single.js","Components/Detail/Sections/Comment.js","Components/Detail/Detail.js","Components/Profile/Sections/Menu.js","Components/Profile/Sections/My.js","Components/Profile/Sections/LikeComponent.js","Components/Profile/Sections/Like.js","Components/Profile/Sections/CommentComponent.js","Components/Profile/Sections/Comment.js","Components/Profile/Profile.js","Components/Search/Search.js","Components/Posting/Posting.js","Components/Register/register.js","Components/Posting/ModifyPost.js","hoc/auth.js","App.js","reportWebVitals.js","reducers/ConfigStore.js","reducers/user_reducer.js","reducers/post_reducer.js","index.js"],"names":["REGISTER_USER","LOGIN_USER","LOGOUT_USER","AUTH_USER","SEARCH","authUser","request","axios","get","then","response","data","type","payload","Login","dispatch","useDispatch","useState","UserEmail","setUserEmail","UserPassword","setUserPassWord","isModalVisible","setIsModalVisible","okBtnHandler","Fragment","onClick","title","visible","onOk","onCancel","onSubmit","e","preventDefault","bodyData","post","loginUser","email","password","loginSuccess","window","location","reload","alert","className","placeholder","value","onChange","currentTarget","id","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","class","href","Logout","props","logoutUser","success","Header","history","useHistory","user","useSelector","state","UserInfo","setUserInfo","Content","setContent","useEffect","Axios","term","searchedResult","searchPost","push","SearchOutlined","userData","is_login","to","pathname","_id","LandingCards","src","imgSrc","alt","createdAt","split","creator","EyeOutlined","views","Category","HtmlCssCategory","setHtmlCssCategory","JsCategory","setJsCategory","ReactCategory","setReactCategory","NodeExpressCategory","setNodeExpressCategory","MongodbCategory","setMongodbCategory","GitCategory","setGitCategory","HttpCategory","setHttp","AlgorithmCategory","setAlgorithm","AwsCategory","setAws","NetWorkCategory","setNetWork","CloseBtn","setCloseBtn","click","style","display","CloseOutlined","marginLeft","gutter","lg","md","sm","CategoryBtn","opacity","styled","button","LandingCarousel","contentStyle","height","fontWeight","fontSize","color","lineHeight","textAlign","background","autoplay","LandingPage","Data","setData","Skip","setSkip","Limit","CategoryValue","setCategoryValue","body","skip","limit","getCards","result","length","loadMore","postCount","renderCards","map","item","idx","xl","xs","description","category","postImg","categoryValue","num","margin","Btn","CaretDownOutlined","div","Contact","From","setFrom","Description","setDescription","variables","from","width","kakaoQR","target","rel","Introduce","ModalVisible","setModalVisible","ModalVisible2","setModalVisible2","ModalVisible3","setModalVisible3","handleCancel","Portfolio","Footer","withRouter","LikeCount","setLikeCount","LikeActionState","setLikeActionState","match","params","liked","forEach","likedUser","likeBtnHandler","addLikeSuccess","HeartFilled","HeartOutlined","Reply","ChildCommentNum","setChildCommentNum","commentNumber","commentsList","comment","refComment","parentCommentId","itm","ReplyWrapper","name","userInfo","delete","content","Single","ReplyContent","setReplyContent","Toggle","setToggle","ReplyBtn","url_id","console","log","handleDelete","currentComment","parentNode","currentComment_id","getAttribute","DetailData","setDetailData","CommentCount","setCommentCount","Comments","setComments","Admin","setAdmin","isAdmin","label","CommentOutlined","EditOutlined","Menu","UserOutlined","LogoutOutlined","My","Name","setName","Email","setEmail","ID","setID","disabled","variable","confirm","userId","LikeComponent","LikeData","setLikeData","whichPost","Like","CommentComponent","CommentData","setCommentData","postId","Comment","Profile","exact","path","component","Search","searched","SearchedResult","searchedPost","NoSearched","p","Title","setTitle","setCategory","Image","setImage","categoryOptions","onDrop","file","formData","FormData","append","header","img","getRootProps","getInputProps","FileAddOutlined","Number","Register","CheckName","setCheckName","CheckEmail","setCheckEmail","Pwd","setPwd","VerifyPwd","setVerifyPwd","nameCheck","emailCheck","submitHandler","registerUser","minLength","maxLength","required","goBack","EditTitle","setEditTitle","EditDescription","setEditDescription","EditCategory","setEditCategory","SpecificComponent","option","admin","AuthCheck","App","Detail","Posting","ModifyPost","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","registerSuccess","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.9c540fd8.chunk.js","sourcesContent":["//일관성 유지 및 오타방지를 위해 리덕스 타입 설정 (Blockmonkey);\nexport const REGISTER_USER = 'register_user';\nexport const LOGIN_USER = 'login_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const AUTH_USER = 'auth_user';\nexport const SEARCH = 'search_post';","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    LOGOUT_USER,\n    REGISTER_USER,\n    AUTH_USER,\n} from './types';\n\n//Redux Actions 유저관련해서 API를 사용할 때 활용함; (Blockmonkey)\n//유저등록, 로그인유저, 로그아웃, 유저권한체크; (Blockmonkey)\n\nexport function registerUser(bodyData){\n    const request = axios.post(\"api/users/register\", bodyData)\n        .then(response => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n};\n\nexport function loginUser(bodyData){\n    const request = axios.post(\"/api/users/login\", bodyData)\n        .then(response => response.data);\n    \n    return {\n        type: LOGIN_USER,\n        payload: request,\n    }\n};\n\nexport function logoutUser(){\n    const request = axios.get(\"/api/users/logout\")\n        .then(response => response.data);\n\n    return{\n        type: LOGOUT_USER,\n        payload: request\n    }\n};\n\nexport function authUser(){\n    const request = axios.get(\"/api/users/auth\")\n        .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\n\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from \"../../actions/user_action\";\nimport { Modal, Input } from 'antd';\nimport { EyeInvisibleOutlined, EyeTwoTone} from '@ant-design/icons';\nimport '../../Scss/Login.scss';\n\n\n//Blockmonkey;\nfunction Login() {\n\n  const dispatch = useDispatch();\n  const [UserEmail, setUserEmail] = useState(\"\");\n  const [UserPassword, setUserPassWord] = useState(\"\");\n\n  const userEmailHandler = (e) => {\n    setUserEmail(e.currentTarget.value);\n  }\n\n  const userPwdHandler = (e) => {\n    setUserPassWord(e.currentTarget.value);\n  }\n\n  //사용자가 로그인 버튼을 눌렀을 시, 실행할 함수.\n  const loginSubmitHandler = (e) => {\n    e.preventDefault();\n\n    //ㅂ\n    let variables = {\n      email : UserEmail,\n      password : UserPassword,\n    }\n\n    dispatch(loginUser(variables))\n      .then(response => {\n        if(response.payload.loginSuccess){\n          //로그인 성공시 할 일,\n          window.location.reload();\n        } else {\n          //로그인 실패시 할 일,\n          alert(`아이디 혹은 비밀번호가 일치하지 않습니다.`);\n        }\n      });\n  }\n\n  //모달창 컨트롤 함수.\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const okBtnHandler = () => {\n    setIsModalVisible(false);\n  };\n\n  const cancleBtnHandler = () => {\n    setIsModalVisible(false);\n  };\n  \n  return (\n    <React.Fragment>\n\n        <div type=\"primary\" onClick={showModal}>\n          로그인\n        </div>\n      \n      <Modal title=\"Login to Ninja Coders\" visible={isModalVisible} onOk={okBtnHandler} onCancel={cancleBtnHandler} >\n        <form onSubmit={loginSubmitHandler}>\n          <div className=\"ant-modal-input_group\">\n            <Input\n              type=\"email\"\n              placeholder=\"E-mail\"\n              value={UserEmail}\n              onChange={userEmailHandler}\n              id=\"modal-input-email\" />\n            <Input.Password\n              type=\"password\"\n              placeholder=\"password\"\n              value={UserPassword}\n              onChange={userPwdHandler}\n              id=\"modal-input-pw\"\n              iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\n          </div>\n          \n          <div class=\"ant-modal-footer\" onClick={okBtnHandler}>\n            <button type=\"submit\" id=\"loginBtn\" >\n              <span>LOGIN</span>\n            </button>\n            <div className=\"ant-modal-footer__column\">\n              <a href=\"/register\">\n                Register in\n              </a>\n            </div>\n          </div>        \n        </form>\n      </Modal>\n\n    </React.Fragment>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../actions/user_action\";\n\n\n//(Blockmonkey);\nfunction Logout(props) {\n  const dispatch = useDispatch();\n\n  //로그아웃 버튼을 눌렀을 때, 실행할 함수 \n  const logoutHandler = () => {\n    dispatch(logoutUser()).then(response => {\n      if(response.payload.success){\n        //로그아웃에 성공했을 때,\n        alert(\"로그아웃에 성공했습니다.\");\n        window.location.reload();\n      } else {\n        //로그아웃에 실패했을 때,\n        alert('로그아웃에 실패했습니다.');\n      }\n    });\n  }\n\n  return (\n        <div onClick={logoutHandler}>로그아웃</div>\n  )\n}\n\nexport default Logout;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory} from 'react-router-dom';\nimport { searchPost } from \"../../actions/post_action\";\nimport Axios from \"axios\";\n\nimport Login from '../Login/Login';\nimport Logout from '../Login/Logout';\n\nimport '../../Scss/Header.scss';\nimport { SearchOutlined } from '@ant-design/icons';\n\n\n\n//(Blockmonkey);\nfunction Header(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  //user 정보를 REDUX의 상태값에서 불러온다.\n  const user = useSelector(state => state.user);\n\n  const [UserInfo, setUserInfo] = useState([]);\n  const [Content, setContent] = useState('');\n\n  useEffect(() => {\n\n    //Axios를 이용하여 데이터베이스에서 유저정보 가져오기\n    Axios.get(\"/api/users/auth\")\n      .then(response => {\n          setUserInfo(response.data);\n      });\n  }, []);\n\n  // 검색창의 쓰여진 내용 실시간으로 감지하기 (Kkevi Do)\n  const handleContent = (e) => {\n    setContent(e.currentTarget.value);\n  }\n\n  //검색내용을 redux에 저장하고, 해당 검색페이지로 넘어가기 (Kkevi Do)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(searchPost(Content))\n    history.push(`/search/?term=${Content}`);\n  }\n\n    return (\n        <div className='headerWrapper'>\n            <a href='/' className='headerName'>NINJA CODERS</a>\n            <div className='headerMiddle'>\n                <div className='menu'>\n                    <a href='/'>MAIN</a>\n                    <a href='/portfolio'>PORTFOLIO</a>\n                    <a href='/introduce'>TEAM</a>\n                    <a href='/contact'>CONTACT</a>\n                </div>\n                <form className='searchBar'>\n                  <input type='text' value={Content} onChange={handleContent} />\n                  <button onClick={handleSubmit} ><SearchOutlined /></button>\n                </form>\n            </div>\n            \n            {/* redux 상태값 user를 탐색 후, is_login 항목이 존재하는가에 따라 로그아웃 버튼 혹은 로그인 버튼을 출력하도록 함 (Blockmonkey) */}\n            <div className='headerTail'>\n              {user.userData &&\n                <div>\n                    {user.userData.is_login ? <Logout /> : <Login />}\n                </div>\n              }\n\n              {/* Link를 이용하여 유저정보를 해당 My 페이지의 props값으로 넘겨주기 (Kkevi Do) */}\n              <Link to={{\n                pathname: `/profile/${UserInfo._id}`,\n                state : UserInfo,\n              }}>MY</Link>\n            </div>\n           \n        </div>\n    )\n}\n\nexport default Header;","import axios from 'axios';\nimport {\n    SEARCH\n} from './types';\n\n\n//검색 Redux Action (Blockmonkey);\n//queryString을 이용해 axios 신호전송 후, 검색된 글 데이터를 받아온다.\nexport function searchPost(term){\n    const request = axios.get(`/api/post/search/?term=${term}`)\n        .then(response => response.data.searchedResult);\n\n    return {\n        type: SEARCH,\n        payload: request\n    }\n};","import React from 'react';\n\nimport '../../../Scss/LandingCards.scss';\nimport { EyeOutlined } from '@ant-design/icons';\n\nfunction LandingCards(props) {\n\n    //props로 받아온 Cards 정보를 뿌리기 (Kkevi Do)\n    return (\n        <a href={`/detail/${props.id}`}>\n            <div className=\"homeCard\">\n                <div className=\"homeCard_column\">\n                    <div className=\"homeCard_ImgContainer\">\n                        <img src={props.imgSrc} alt='/' />\n                    </div>\n                </div>\n                <div className=\"homeCard_column\">\n                    <div className=\"homeCard_description\">\n                        <div className=\"homeCard__title\">{props.title}</div>\n                        <div className=\"homeCard__date\">{props.createdAt.split(\"T\")[0]}</div>\n                    </div>\n                    <div className=\"homeCard_description\">\n                        <div className=\"homeCard__author\">{props.creator}</div>\n                        <div className=\"homeCard__counts\">\n                            <div className=\"homeCard__counts-view\"><EyeOutlined /> {props.views}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    )\n}\n\nexport default LandingCards\n","import React, { useState } from 'react';\n\nimport '../../../Scss/Category.scss';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { Row , Col } from 'antd';\nimport styled from \"styled-components\";\n\nfunction Category(props) {\n\n    //초기에는 카테고리를 분류하지 않고 모두 보여주기 위해 true 값을 디폴트로 지정 (Kkevi Do)\n    const [HtmlCssCategory, setHtmlCssCategory] = useState(true);\n    const [JsCategory, setJsCategory] = useState(true);\n    const [ReactCategory, setReactCategory] = useState(true);\n    const [NodeExpressCategory, setNodeExpressCategory] = useState(true);\n    const [MongodbCategory, setMongodbCategory] = useState(true);\n    const [GitCategory, setGitCategory] = useState(true);\n    const [HttpCategory, setHttp] = useState(true);\n    const [AlgorithmCategory, setAlgorithm] = useState(true);\n    const [AwsCategory, setAws] = useState(true);\n    const [NetWorkCategory, setNetWork] = useState(true);\n    const [CloseBtn, setCloseBtn] = useState(true);\n\n    \n    //카테고리 버튼을 클릭했을 때 해당하는 카테고리는 제외하고 모두 false값으로 변경한 뒤,\n    //props로 해당 카테고리 번호값을 넘겨주기\n    //(Kkevi Do)\n    const handleHtmlBtnClick = () => {\n        setHtmlCssCategory(true);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(0);\n    }\n    const handleJsBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(true);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(1);\n    }\n    const handleReactBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(true);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(2);\n    }\n    const handleNodeBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(true);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(3);\n    }\n    const handleMongoBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(true);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(4);\n    }\n    const handleGitBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(true);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(5);\n    }\n    const handleHttpBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(true);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(6);\n    }\n    const handleAlgorithmBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(true);\n        setAws(false);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(7);\n    }\n    const handleAwsBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(true);\n        setNetWork(false);\n        setCloseBtn(false);\n        props.click(8);\n    }\n    const handleNetworkBtnClick = () => {\n        setHtmlCssCategory(false);\n        setJsCategory(false);\n        setReactCategory(false);\n        setNodeExpressCategory(false);\n        setMongodbCategory(false);\n        setGitCategory(false);\n        setHttp(false);\n        setAlgorithm(false);\n        setAws(false);\n        setNetWork(true);\n        setCloseBtn(false);\n        props.click(9);\n    }\n\n    // 닫기 버튼을 누르면 모든 값이 다시 true로 돌아오고,\n    // 카테고리 번호값도 initialState값으로 되돌려줌.\n    //(Kkevi Do)\n    const handleCloseBtnClick = () => {\n        setHtmlCssCategory(true);\n        setJsCategory(true);\n        setReactCategory(true);\n        setNodeExpressCategory(true);\n        setMongodbCategory(true);\n        setGitCategory(true);\n        setHttp(true);\n        setAlgorithm(true);\n        setAws(true);\n        setNetWork(true);\n        setCloseBtn(true);\n        props.click(100);\n    }\n\n    return (\n        <div className=\"categoryWrapper\">\n            <button className=\"closeBtn\" onClick={handleCloseBtnClick} value={CloseBtn} style={{display: CloseBtn ? 'none' : 'block'}}>\n                <CloseOutlined style={{marginLeft: '-3.7px'}} />\n            </button>\n            \n            <div className=\"buttonWrapper\">\n                <Row gutter={[24, 24]}>\n                    {/* 삼항연산자를 이용하여 해당하지 않는 카테고리 버튼의 투명도를 props를 이용하여 조절함 (Kkevi Do) */}\n                    <Col lg={4} md={6} sm={8}>\n                        <CategoryBtn onClick={handleHtmlBtnClick} value={HtmlCssCategory} opacity={HtmlCssCategory ? 1 : 0.3}>HTML/CSS</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={6} sm={8}>\n                        <CategoryBtn onClick={handleJsBtnClick} value={JsCategory} opacity={JsCategory ? 1 : 0.3}>JS</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={6} sm={8}>\n                        <CategoryBtn onClick={handleReactBtnClick} value={ReactCategory} opacity={ReactCategory ? 1 : 0.3}>React</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={6} sm={8}>\n                        <CategoryBtn onClick={handleNodeBtnClick} value={NodeExpressCategory} opacity={NodeExpressCategory ? 1 : 0.3}>Node/Express</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleMongoBtnClick} value={MongodbCategory} opacity={MongodbCategory ? 1 : 0.3}>MongoDB</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleGitBtnClick} value={GitCategory} opacity={GitCategory ? 1 : 0.3}>Git/GitHub</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleHttpBtnClick} value={HttpCategory} opacity={HttpCategory ? 1 : 0.3}>HTTP</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleAlgorithmBtnClick} value={AlgorithmCategory} opacity={AlgorithmCategory ? 1 : 0.3}>Algorithm</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleAwsBtnClick} value={AwsCategory} opacity={AwsCategory ? 1 : 0.4}>AWS</CategoryBtn>\n                    </Col>\n                    <Col lg={4} md={8}>\n                        <CategoryBtn onClick={handleNetworkBtnClick} value={NetWorkCategory} opacity={NetWorkCategory ? 1 : 0.3}>NetWork</CategoryBtn>\n                    </Col>\n                </Row>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Category;\n\nconst CategoryBtn = styled.button`\n    opacity: ${props => props.opacity};\n`;","import React from 'react'\nimport { Carousel } from 'antd';\nimport '../../../Scss/Carousel.scss';\n\nfunction LandingCarousel() {\n\n    const contentStyle = {\n        height: '250px',\n        fontWeight: '900',\n        fontSize: '20px',\n        color: '#2D3133',\n        lineHeight: '250px',\n        textAlign: 'center',\n        background: '#CA526B',\n      };\n      \n    return (\n        <div>\n             <Carousel autoplay>\n                <div>\n                  <h3 style={contentStyle}>Hello, We are Ninja Coders!</h3>\n                </div>\n                <div>\n                  <h3 style={contentStyle}>BlockMonkey</h3>\n                </div>\n                <div>\n                  <h3 style={contentStyle}>Kkevi</h3>\n                </div>\n                <div>\n                  <h3 style={contentStyle}>Minseo</h3>\n                </div>\n              </Carousel>\n        </div>\n    )\n}\n\nexport default LandingCarousel\n","import React, { useEffect, useState } from 'react';\nimport Axios from \"axios\";\n\nimport LandingCards from './Sections/LandingCards';\nimport Category from './Sections/Category';\nimport LandingCarousel from \"./Sections/LandingCarousel\";\n\nimport { Row , Col } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nfunction LandingPage(props) {\n\n    const [Data, setData] = useState([]);\n    const [Skip, setSkip] = useState(0);\n    const [Limit, setLimit] = useState(8);\n    const [CategoryValue, setCategoryValue] = useState(100);\n\n\n    //Category Componet에서 받아온 카테고리 값 설정해주기 (Kkevi Do)\n    const handleCategory = (num) => {\n        setCategoryValue(num)\n    }\n\n    useEffect(() => {\n\n        //더보기 버튼을 누르지 않았을 때 기본적으로 보여지는 Cards들의 개수를 구하고 이후 개수만큼 Cards를 렌더링 (Kkevi Do)\n        let body = {\n            skip : Skip,\n            limit : Limit,\n        }\n        getCards(body);\n\n        //카테고리 버튼을 누를 때마다 해당 카테고리에 속하는 Cards를 다시 렌더링하도록 함. (Kkevi Do)\n        Axios.get(`/api/post/category/${CategoryValue}`)\n            .then(response => {\n                //해당 카테고에 속하는 Cards 값이 0개 이상이면 Cards를 보여주기 (Kkevi Do)\n                if(response.data.result.length > 0){\n                    setData(response.data.result)\n                }else{\n                    getCards(body)\n                }\n            } )\n        \n    }, [CategoryValue])\n\n    const getCards = (body) => {\n        Axios.post('/api/post/postAll', body)\n        .then(response => {\n            if(response.data.success){\n                //기본적으로 8개의 Cards를 보여주고, 이후 더보기 버튼을 눌렀을 때 8개의 Cards를 더 보여줌. (Kkevi Do)\n                if(body.loadMore){\n                    setData([...Data, ...response.data.result]);\n                } else {\n                    setData(response.data.result);\n                }\n                //보여줄 수 있는 Cards들이 존재하지 않으면 마지막 페이지임을 알려줌. (Kkevi Do)\n                if(response.data.postCount < 1){\n                    alert('마지막 페이지입니다.');\n                }\n            }\n        })\n    }\n\n    //더보기 버튼을 눌렀을 때, (Kkevi Do)\n    const loadMoreHandler = () => {\n        let skip = Skip + Limit;\n\n        //더보기 버튼을 눌렀을 때 이미 보여준 Cards들을 skip, 보여줘야할 Cards를 limit으로 지정\n        let body = {\n            skip : skip,\n            limit : Limit,\n            loadMore: true,\n        }\n\n        getCards(body);\n        setSkip(skip);\n    }\n\n    //Cards를 렌더링하는 map 내장함수 (Kkevi Do)\n    const renderCards = Data.map((item, idx) => {\n        return <Col key={idx} xl = {6} lg={8} md={12} xs={24}>\n                    <LandingCards\n                        id={item._id}\n                        title={item.title}\n                        views={item.views}\n                        creator={item.creator}\n                        createdAt={item.createdAt}\n                        description={item.description}\n                        category={item.category}\n                        imgSrc={item.postImg}\n                    />\n                </Col>\n    })\n\n    return (\n        <div>\n            <LandingCarousel />\n            <Category categoryValue = {CategoryValue} click={handleCategory} />\n            {Data && \n                <Row gutter={[24, 24]} style={{margin: \"0px 30px\"}}>\n                    {renderCards}\n                </Row>}\n            <Btn>\n                <button onClick={loadMoreHandler}><CaretDownOutlined /></button>\n            </Btn>\n        </div>\n    )\n}\n\nexport default LandingPage;\n\nconst Btn = styled.div`\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    button{\n        border: none;\n        background-color: #CA526B;\n        color: white;\n        opacity: 0.8;\n        width: 30px; height: 30px;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        &:hover{\n            cursor: pointer;\n            opacity: 1;\n        }\n    }\n`;","export default __webpack_public_path__ + \"static/media/kakaoQR.41357031.PNG\";","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport '../../Scss/Contact.scss';\nimport kakaoQR from \"../../kakaoQR.PNG\";\n\n//Nodemailer를 활용해 이메일 전송서비스 페이지\n//(Blockmonkey)\n\nfunction Contact() {\n    //Nodemailer의 최소정보로, 누가 보냈는지(발신자), 글 내용 두가지 요건이 필요하다. 따라서 두개의 스테이트 값을 설정.\n    const [From, setFrom] = useState(\"\");\n    const [Description, setDescription] = useState(\"\");\n\n\n    const fromStateHandler = (e) => {\n        setFrom(e.currentTarget.value);\n    };\n\n    const descriptionStateHandler = (e) => {\n        setDescription(e.currentTarget.value);\n    };\n\n    //nodemailer로 Axios를 통해 신호를 보낸다.\n    //from 상태값을 From에 넣고, description에 Description 상태값을 넣어\n    //정보 두가지를 포함해 보내면 나머지는 nodejs에서 처리하면 된다.\n    const nodeMailerSubmitHandler = (e) => {\n        let variables = {\n            from : From,\n            description : Description\n        };\n        axios.post(\"/api/contact/emailsend\", variables)\n            .then(response => {\n                if(response.data.success){\n                    alert(`메일이 정상적으로 전송되었습니다 ✅`);\n                } else {\n                    alert(`메일전송실패 카카오톡 채팅방을 이용해주세요 😭`);\n                }\n            });\n    };\n\n    return (\n        <div className='contactWrapper'>\n            <div className='contactWrapper_contents'>\n                <div className='contact-EmailWrapper'>\n                    <div className='contact-Email'>Send E-mail</div>\n                    <div className='contact-Email__contents'>\n                        <input \n                            type='text' \n                            placeholder='이메일을 입력해주세요.' \n                            value={From}\n                            onChange={fromStateHandler}\n                        />\n                        <textarea\n                            placeholder='내용을 입력해주세요.'\n                            value={Description}\n                            onChange={descriptionStateHandler}\n                        />\n                        <button onClick={nodeMailerSubmitHandler}>보내기</button>\n                    </div>\n                </div>\n                \n                {/* 카카오톡방 참여 서비스 */}\n                {/* QR코드 이미지는 현재 리액트 src 폴더에 함께 포함시켰으나, 추후 S3로 이동시켜야함 (Blockmonkey) */}\n                <div className='contact-OpenTalkWrapper'>\n                    <div className='contact-OpenTalk'>Kakao Talk</div>\n                    <div className='contact-OpenTalk__contents'>\n                        <div className='contact-OpenTalk__QR'>\n                            <img style={{width: \"100%\", height: \"100%\"}}src={kakaoQR} alt=\"KAKAO QR CODE\" />\n                        </div>\n                        <div className='contact-OpenTalk__description'>\n                            <div>\n                                <p>팀 오픈카카오톡 링크입니다.</p>\n                                <p>오류사항이나 문의 사항, 혹은 궁금한 점이 있다면 오픈 카카오톡을 통해 남겨주세요.</p>    \n                            </div>\n                            <div className='contact-OpenTalk__link'>\n                                <a href=\"https://open.kakao.com/o/gUFV5sgd\" target=\"_blank\" rel=\"noopener noreferrer\">간편하게 링크로 이동하기 →</a>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Contact\n","import React, { useState } from 'react';\nimport { Modal } from 'antd';\n\nimport '../../Scss/Introduce.scss';\n\n\nfunction Introduce() {\n\n    const [ModalVisible, setModalVisible] = useState(false);\n    const [ModalVisible2, setModalVisible2] = useState(false);\n    const [ModalVisible3, setModalVisible3] = useState(false);\n\n    const showModal = () => {\n        setModalVisible(true);\n    }\n\n    const showModal2 = () => {\n        setModalVisible2(true);\n    }\n\n    const showModal3 = () => {\n        setModalVisible3(true);\n    }\n\n    const handleCancel = () => {\n        setModalVisible(false);\n        setModalVisible2(false);\n        setModalVisible3(false);\n    }\n    \n    return (\n        <div className='introduceWrapper'>\n            <div className='introduce__Person'>\n                <div className='introduce_Profile' onClick={showModal3}>\n                    <img alt='' />\n                </div>\n                <div className='introduce_Name'>BlockMonkey</div>\n                <div className='introduce_Intro'>MERNstack Developer</div>\n                <Modal className='introduce__Modal' visible={ModalVisible3}  onCancel={handleCancel} >\n                    <div className='introduce__Modal__Profile'><img alt='' /></div>\n                    <div className='introduce__Modal__Contents'>\n                        <div className='introduce__Modal__Name'>BlockMonkey</div>\n                        <div className='introduce__Modal__Date'>1992.08.31</div>\n                        <div className='introduce__Modal__Graduate'>\n                            <p>홍익대학교 경영학과 학사</p>\n                            <p>국민대학교 소프트웨어융합대학원 블록체인학과 석사</p>\n                        </div>\n                        <div className='introduce__Modal-footer'>\n                            <div className='introduce__Modal__Intro'>현실의 문제를 해결하기 위해 노력하는 개발자</div>\n                            <a className='introduce__Modal__Link' href='/' target='blank'>개인 페이지로 이동 →</a>\n                        </div>\n                    </div>\n                    </Modal>\n            </div>\n            <div className='introduce__Person'>\n                <div className='introduce_Profile' onClick={showModal2}>\n                    <img alt='' />\n                </div>\n                <div className='introduce_Name'>Kkevi Do</div>\n                <div className='introduce_Intro'>Front-End Developer & Designer</div>\n                <Modal className='introduce__Modal' visible={ModalVisible2} onCancel={handleCancel} >\n                    <div className='introduce__Modal__Profile'><img alt='' /></div>\n                    <div className='introduce__Modal__Contents'>\n                        <div className='introduce__Modal__Name'>Kkevi Do</div>\n                        <div className='introduce__Modal__Date'>1998.06.27</div>\n                        <div className='introduce__Modal__Graduate'>한양대학교 서피스 인테리어학과 학사</div>\n                        <div className='introduce__Modal-footer'>\n                            <div className='introduce__Modal__Intro'>생각을 멈추지 않고 끊임 없이 앞으로 나아가는 깨비</div>\n                            <a className='introduce__Modal__Link' href='/' target='blank'>개인 페이지로 이동 →</a>\n                        </div>\n                    </div>\n               </Modal>\n            </div>\n            <div className='introduce__Person'>\n                <div className='introduce_Profile' onClick={showModal}>\n                    <img alt='' />\n                </div>\n                <div className='introduce_Name'>MinSeo</div>\n                <div className='introduce_Intro'>Node JS Back-End Developer</div>\n                <Modal className='introduce__Modal' visible={ModalVisible} onCancel={handleCancel} >\n                    <div className='introduce__Modal__Profile'><img alt='' /></div>\n                    <div className='introduce__Modal__Contents'>\n                        <div className='introduce__Modal__Name'>MinSeo</div>\n                        <div className='introduce__Modal__Date'>1998.06.24</div>\n                        <div className='introduce__Modal__Graduate'>원광대학교 반도체 디스플레이 학부 학사</div>\n                        <div className='introduce__Modal-footer'>\n                            <div className='introduce__Modal__Intro'>편의성을 추구하는 개발자</div>\n                            <a className='introduce__Modal__Link' href='/' target='blank'>개인 페이지로 이동 →</a>\n                        </div>\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    )\n}\n\nexport default Introduce\n","import React from 'react';\nimport '../../Scss/Portfolio.scss';\n\nfunction Portfolio() {\n\n    return (\n        <div className='portfolioWrapper'>\n            <div className='portfolio_content'>\n                <div className='portfolio__Img'><img alt='' /></div>\n                <div className='portfolio_content__Wrapper'>\n                    <div className='portfolio_content__Title'>\n                        <div>Team Blog</div>\n                        <div>(2021-06)</div>\n                    </div>\n                    <div className='portfolio_content__Description'>\n                        <p>팀 블로그의 소개 페이지입니다!</p>\n                        <p>React & Node</p>\n                    </div>\n                    <div className='portfolio_content_Links'>\n                        <a href='/' target='_blank'>Go to Page</a>\n                        <a href='/' target='_blank'>GitHub</a>\n                        <a href='/' target='_blank'>Read Me</a>\n                    </div>\n                </div>\n            </div>\n            <div className='portfolio_content'>\n                <div className='portfolio__Img'><img alt='' /></div>\n                <div className='portfolio_content__Wrapper'>\n                    <div className='portfolio_content__Title'>\n                        <div>Team Blog</div>\n                        <div>(2021-06)</div>\n                    </div>\n                    <div className='portfolio_content__Description'>\n                        <p>팀 블로그의 소개 페이지입니다!</p>\n                        <p>React & Node</p>\n                    </div>\n                    <div className='portfolio_content_Links'>\n                        <a href='/' target='_blank'>Go to Page</a>\n                        <a href='/' target='_blank'>GitHub</a>\n                        <a href='/' target='_blank'>Read Me</a>\n                    </div>\n                </div>\n            </div>\n            <div className='portfolio_content'>\n                <div className='portfolio__Img'><img alt='' /></div>\n                <div className='portfolio_content__Wrapper'>\n                    <div className='portfolio_content__Title'>\n                        <div>Team Blog</div>\n                        <div>(2021-06)</div>\n                    </div>\n                    <div className='portfolio_content__Description'>\n                        <p>팀 블로그의 소개 페이지입니다!</p>\n                        <p>React & Node</p>\n                    </div>\n                    <div className='portfolio_content_Links'>\n                        <a href='/' target='_blank'>Go to Page</a>\n                        <a href='/' target='_blank'>GitHub</a>\n                        <a href='/' target='_blank'>Read Me</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio\n","import React from 'react';\n\nimport '../../Scss/Footer.scss';\n\nfunction Footer() {\n\n    return (\n        <div className=\"footerWrapper\">\n            <div>\n                Copyright © 2021 Ninja Coders All Rights Reserved.\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\n\nimport { HeartOutlined, HeartFilled } from '@ant-design/icons';\n\nfunction Like(props){\n    const [LikeCount, setLikeCount] = useState(0);\n    const [LikeActionState, setLikeActionState] = useState(false);\n    let user = useSelector(state => state.user); //현재 로그인한 유저의 상태값은 리덕스를 활용해 불러옴. (Blockmonkey)\n\n    useEffect(() => {\n        //좋아요는 로그인한 유저의 권한으로 한정, 따라서 로그인되어있는지 확인 후 (Blockmonkey)\n        if(user.userData){\n            //Axios를 활용해 api로 신호전달; (Blockmonkey)\n            Axios.get(`/api/like/${props.match.params.id}`)\n            .then(response => {\n                setLikeCount(response.data.liked.length);\n                response.data.liked.forEach((item, idx)=> {\n                    if(user.userData._id === item.likedUser){\n                        setLikeActionState(true);\n                    } else {\n                        setLikeActionState(false);\n                    }\n                })\n            });\n        } else {\n            //만약 로그인이 되어있지 않다면, 아무런 동작도 하지않음;(Blockmonkey)\n            return ;\n        }\n    }, [user.userData, props]);\n\n    //좋아요 버튼을 클릭했을 때, 좋아요 생성 혹은 삭제 (Blockmonkey);\n    const likeBtnHandler = (e) => {\n        e.preventDefault();\n        Axios.get(`/api/like/likeaction/${props.match.params.id}`)\n            .then(response => {\n                if(response.data.addLikeSuccess){\n                    //본인이 좋아요한 유저가 아니라, 좋아요를 추가했을 때, (Blockmonkey)\n                    setLikeCount(LikeCount+1);\n                    setLikeActionState(true);\n                } else {\n                    //본인이 좋아요한 유저라, 좋아요를 삭제했을 때, (Blockmonkey)\n                    setLikeCount(LikeCount-1);\n                    setLikeActionState(false);\n                }\n            });\n    }\n\n    return (\n        <div>\n            <div className=\"detailWrapper_like\">\n                {/* LikeAction의 상태값(본인이 좋아요 했는지 확인)에 따라, 꽉찬 하트 혹은 빈하트출력 (Blockmonkey) */}\n                {LikeActionState ?\n                    <HeartFilled onClick={likeBtnHandler} style={{color : '#CA526B' }} /> :\n                    <HeartOutlined onClick={likeBtnHandler} style={{opacity : '0.7' }} />\n                }\n                {LikeActionState ?\n                    <span style={{color : '#CA526B' }}>{LikeCount}</span> :\n                    <span style={{opacity : '0.7' }}>{LikeCount}</span>\n                }\n            </div>  \n        </div>\n    )\n}\n\nexport default withRouter(Like);\n","import React, { useState, useEffect } from 'react';\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nfunction Reply(props) {\n\n    //답글이 존재 여부를 파악할 state값 (Kkevi Do)\n    const [ChildCommentNum, setChildCommentNum] = useState(0);\n\n    useEffect(() => {\n        //초기 답글은 0개\n        //전체 덧글 중, 답글이 존재하는 덧글을 찾을 때마다 commentNumber를 하나씩 더해준다.\n        //(Kkevi Do)\n        let commentNumber = 0;\n        props.commentsList.forEach((comment)=> {\n            if(comment.refComment === props.parentCommentId){\n                commentNumber ++;\n            }\n        })\n        setChildCommentNum(commentNumber);\n    }, [props.commentsList, props.parentCommentId])\n\n    return (\n        <div>\n            {/* 만약 답글이 0개 이상이라면 답글을 렌더링한다. (Kkevi Do) */}\n            {ChildCommentNum > 0 &&\n                props.commentsList.map((itm, idx) => (\n                    itm.refComment === props.parentCommentId &&\n                    <ReplyWrapper>\n                        <div className='detailWrapper_comment__contents' id={idx}>\n                            <div className=\"detailWrapper_comment_creator\">\n                                <div>\n                                    <div>{itm.creator.name}</div>\n                                    <div>{itm.createdAt.split(\"T\")[0]}</div>\n                                </div>\n                                {props.userInfo.name === itm.creator.name ?\n                                <CloseOutlined onClick={props.delete} /> : null}\n                            </div>\n                            <div className=\"detailWrapper_comment_reply\">\n                                <div>{itm.content}</div>\n                            </div>\n                        </div>\n                    </ReplyWrapper>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Reply\n\nconst ReplyWrapper = styled.div`\n    background-color: #EFF2F3;\n    .detailWrapper_comment__contents{\n        padding-left: 60px;\n    }\n`;\n","import React, { useState } from 'react';\nimport Axios from \"axios\";\n\nimport { CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\n\nfunction Single(props) {\n\n    const [ReplyContent, setReplyContent] = useState(\"\");   \n    const [Toggle, setToggle] = useState(false); \n\n    //실시간으로 input내용 감지 (Kkevi Do)\n    const handleReplyContent = (e) => {\n        setReplyContent(e.currentTarget.value);\n    }\n\n    //답글 작성 API (Kkevi Do)\n    const handleReplySubmit = (e) => {\n        if(ReplyContent.length < 3){\n            alert(\"댓글은 3글자 이상 작성해주세요.\");\n            return ;\n        };\n\n        //답글을 작성하려고 하는 덧글을 파악 (Kkevi Do)\n        const currentComment_id = props.comment._id\n\n        //작성한 답글의 내용과 답글의 부모 덧글 _id값을 refComment로 넘겨줌. (Kkevi Do)\n        const variables = {\n            refComment : currentComment_id,\n            content : ReplyContent,\n        }\n\n        Axios.post(`/api/comments/createReply/${props.url_id}`, variables)\n            .then(response => {\n                console.log(response)\n                if(response.data.success){\n                    setReplyContent(\"\");\n                    setToggle(false);\n                    window.location.reload();\n                } else {\n                    alert(\"로그인 후 덧글을 작성해주세요.\");\n                }\n            });\n    }\n\n    //답글 toggle (Kkevi Do)\n    const handleToggle = (e) => {\n        setToggle(!Toggle);\n    }\n\n    return (\n        <React.Fragment>\n            {<div className='detailWrapper_comment__contents' id={props.id}>\n                <div className=\"detailWrapper_comment_creator\">\n                        <div>\n                            <div>{props.comment.creator.name}</div>\n                            <div>{props.comment.createdAt.split(\"T\")[0]}</div>    \n                        </div>\n                        {/* 덧글 작성자와 덧글을 삭제하려는 자의 name값이 일치하면 삭제 버튼이 보인다. (Kkevi Do) */}\n                        {props.userInfo.name === props.comment.creator.name ?\n                        <CloseOutlined onClick={props.delete} /> : null}\n                </div>\n                <div className=\"detailWrapper_comment_reply\">\n                    <div>{props.comment.content}</div>\n                    <button onClick={handleToggle} >답글</button>\n                </div>\n                \n            {Toggle &&\n                <ReplyBtn className=\"detailWrapper_comment__column\">\n                    <textarea\n                        value = {ReplyContent}\n                        placeholder=\"답글을 달아주세요.\"\n                        onChange = {handleReplyContent}\n                    />\n                    <button onClick={handleReplySubmit} >작성</button>\n                </ReplyBtn>\n            }\n            </div>}\n        </React.Fragment>\n    )\n}\n\nexport default Single\n\nconst ReplyBtn = styled.div`\n    margin-bottom: -15px;\n`","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Axios from \"axios\";\n\nimport Reply from './Reply';\nimport Single from './Single';\n\nfunction Comment(props) {\n\n    const [Content, setContent] = useState(\"\");\n    const [UserInfo, setUserInfo] = useState(\"\");\n\n    //유저정보를 가져오는 API (Kkevi Do)\n    useEffect(() => {\n        Axios.get(\"/api/users/auth\")\n            .then(response => {\n                setUserInfo(response.data);\n            });\n    }, []);\n\n    //실시간으로 input값을 감지 (Kkevi Do)\n    const handleContent = (e) => {\n        setContent(e.currentTarget.value);\n    }\n\n    //덧글 작성 API (Kkevi Do)\n    const handleSubmit = () => {\n\n        if(Content.length < 3){\n            alert(\"댓글은 3글자 이상 작성해주세요.\");\n            return ;\n        };\n\n        const variables = {\n            content : Content,\n        }\n\n        Axios.post(`/api/comments/create/${props.match.params.id}`, variables)\n            .then(response => {\n                if(response.data.success){\n                    setContent(\"\");\n                    window.location.reload();\n                } else {\n                    alert(\"로그인 후 덧글을 작성해주세요.\");\n                }\n            });\n    }\n\n    //덧글 삭제 API (Kkevi Do)\n    const handleDelete = (e) => {\n        e.preventDefault();\n\n        //사용자가 클릭한 덧글을 가져오고\n        //사용자가 클릭한 덧글의 id값을 이용하여 모든 덧글 리스트 중 클릭한 덧글의 _id값을 가져옴\n        //(Kkevi Do)\n        const currentComment = e.currentTarget.parentNode.parentNode;\n        const currentComment_id = props.commentsList[currentComment.getAttribute('id')]._id\n\n        Axios.delete(`/api/comments/delete/${currentComment_id}`)\n            .then(response => {\n                if(response.data.success === true){\n                    alert('덧글 삭제가 완료 되었습니다.')\n                    window.location.reload();\n                }else{\n                    alert('덧글을 삭제할 수 없습니다.')\n                }\n            })\n    }\n\n    return (\n \n    <div className=\"detailWrapper_comment\">\n\n        {props.commentsList.length > 0 && props.commentsList.map((itm, idx) => (\n            \n            //먼저 답글이 없는 일반 덧글과 답글이 있는 덧글을 구분하여 답글이 없는 일반 덧글은 그대로 출력하고,\n            //refComment가 존재하는 답글이 일반 덧글처럼 출력되며 중복되는 것을 막기 위해\n            //itm.refComment가 아닌 것은 출력하지 않도록 한다.\n            //(Kkevi Do)\n            (!itm.refComment &&\n                <div className=\"detailWrapper_comment__column\">\n                    <React.Fragment>\n                        <Single \n                            key={idx}\n                            comment = {itm}\n                            delete = {handleDelete}\n                            id = {idx}\n                            url_id = {props.match.params.id}\n                            userInfo = {UserInfo}\n                        />\n                        <Reply\n                            commentsList={props.commentsList}\n                            parentCommentId = {itm._id}\n                            userInfo = {UserInfo}\n                            delete = {handleDelete}\n                            id = {idx}\n                            url_id = {props.match.params.id}\n                        />\n                    </React.Fragment>\n                </div>\n            )\n        ))}\n            \n        <div className=\"detailWrapper_comment__column\">\n            <textarea \n                value={Content} \n                placeholder=\"덧글을 달아주세요.\" \n                onChange={handleContent}\n            />\n            <button onClick={handleSubmit}>작성</button>\n        </div>\n    </div>\n    )\n}\n\nexport default withRouter(Comment);\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Axios from \"axios\";\n\nimport Like from \"./Sections/Like\";\nimport Comment from './Sections/Comment';\n\nimport { EyeOutlined, HeartOutlined, CommentOutlined, CloseOutlined, EditOutlined } from '@ant-design/icons';\nimport \"../../Scss/Detail.scss\";\n\n\nfunction Detail(props) {\n\n    const [DetailData, setDetailData] = useState([]);\n    const [LikeCount, setLikeCount] = useState(0);\n    const [CommentCount, setCommentCount] = useState(0);\n    const [Comments, setComments] = useState([]);\n    const [Admin, setAdmin] = useState(false);\n    \n    const createdAt = (DetailData.createdAt || '').split(\"T\")[0];\n\n    //데이터베이스에서 가져온 글들의 카테고리 값을 해석할 배열을 만듦 (Kkevi Do)\n    const categoryOptions = [\n        { value : 0, label : \"HTML/CSS\" },\n        { value : 1, label : \"Js\" },\n        { value : 2, label : \"React\" },\n        { value : 3, label : \"Node/Express\" },\n        { value : 4, label : \"MongoDB\" },\n        { value : 5, label : \"Git/GitHub\" },\n        { value : 6, label : \"HTTP\" },\n        { value : 7, label : \"Algorithm\" },\n        { value : 8, label : \"AWS\" },\n        { value : 9, label : \"Network\" },\n    ];\n\n    useEffect(() => {\n\n        //데이터베이스에서 모든 게시글들을 불러오기 (Kkevi Do)\n        Axios.get(`/api/post/postDetail/${props.match.params.id}`)\n            .then(response => {\n                setDetailData(response.data.post)\n            })\n\n        //댓글띄우는 API (Blockmonkey)\n        //댓글 갯수 상태값과, 댓글 정보를 Comments 상태값에 저장해 화면에 출력할 것 (Blockmonkey);\n        Axios.get(`/api/comments/${props.match.params.id}`)\n            .then(response => {\n                if(response.data.success){\n                    setCommentCount(response.data.result.length);\n                    setComments(response.data.result);\n                }\n            });\n        \n        //좋아요 갯수 API (Blockmonkey);\n        //현재 글의 _id값을 포함해 axios로 리퀘스트를 보내면,\n        //현재 글의 좋아요 갯수를 가져올 수 있다.\n        Axios.get(`/api/like/${props.match.params.id}`)\n            .then(response => {\n                setLikeCount(response.data.liked.length);\n            });\n\n        //유저정보를 가져오는 API (Kkevi Do)\n        Axios.get(\"/api/users/auth\")\n            .then(response => {\n                setAdmin(response.data.isAdmin);\n            });\n\n    }, [props]);\n\n\n    //게시글을 삭제하는 API (Kkevi Do)\n    const handleDelete = (e) => {\n        e.preventDefault();\n        \n        Axios.delete(`/api/post/delete/${props.match.params.id}`)\n            .then(response => {\n                if(response.data.success === true){\n                    alert('성공적으로 삭제되었습니다.')\n                    props.history.push('/');\n                }\n            });\n    }\n\n    //게시글을 수정하는 링크 (Kkevi Do)\n    const handleEdit = (e) => {\n        props.history.push(`/update/${props.match.params.id}`)\n    }\n\n    return (\n        <div className=\"detailContainer\">\n            <div className=\"detailWrapper\">\n                <div className=\"detailWrapper_title\">\n                    {DetailData.category &&\n                        <div className=\"detailColumn\">\n                            <div className=\"detail__category\">{categoryOptions[DetailData.category].label}</div>\n                            <div>{DetailData.title}</div>\n                            <div>{createdAt}</div>\n                        </div>\n                    }\n                        <div className=\"detailColumn\">\n                            <div><EyeOutlined />{DetailData.views}</div>\n                            <div><HeartOutlined /> {LikeCount}</div>\n                            <div><CommentOutlined /> {CommentCount}</div>\n                            {!Admin ? null\n                            :<div>\n                                <div onClick={handleDelete}><CloseOutlined /></div>\n                                <div onClick={handleEdit}><EditOutlined /></div>\n                            </div>\n                            }\n                        </div>\n                </div>\n                <div className=\"detailWrapper_description\">{DetailData.description}</div>\n                <Like />\n            </div>\n            \n            {/* 모든 덧글을 출력한 배열을 props로 넘겨줌 (Kkevi Do) */}\n            <Comment commentsList={Comments} />\n        </div>\n    )\n}\n\nexport default withRouter(Detail)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logout from '../../Login/Logout';\n\nimport { UserOutlined, HeartOutlined, CommentOutlined, LogoutOutlined } from '@ant-design/icons';\nimport \"../../../Scss/Profile.scss\";\n\nfunction Menu(props) {\n\n    return (\n        <div className=\"myMenu__Wrapper\">\n            <div className=\"myMenu__title\">나의 정보</div>\n            <div className=\"myMenu__contents\">\n                <div className=\"myMenu__list\">\n                    <UserOutlined />\n                    <Link to={{\n                        pathname: `/profile/${props.id}`\n                    }}>My</Link>\n                </div>\n                <div className=\"myMenu__list\">\n                    <HeartOutlined />\n                    <Link to={{\n                        pathname: `/profile/like/${props.id}`\n                    }}>Like</Link>\n                </div>\n                <div className=\"myMenu__list\">\n                    <CommentOutlined />\n                    <Link to={{\n                        pathname: `/profile/comment/${props.id}`\n                    }}>Comment</Link>\n                </div>\n                <div className=\"myMenu__list\">\n                    <LogoutOutlined />\n                    <Logout />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Menu\n","import React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\n\nimport '../../../Scss/Profile.scss';\n\nfunction My(props) {\n\n    const [Name, setName] = useState('');\n    const [Email, setEmail] = useState('');\n    const [ID, setID] = useState('');\n\n    //Axios를 이용하여 데이터베이스에 있는 유저정보를 가져와 state값에 저장하기 (Kkevi Do)\n    useEffect(() => {\n        Axios.get(\"/api/users/auth\")\n            .then(response => {\n                setID(response.data._id)\n                setName(response.data.name)\n                setEmail(response.data.email)\n            });\n    }, []);\n\n    //실시간으로 변경되는 input값 감지 (Kkevi Do)\n    const handleName = (e) => {\n        e.preventDefault();\n        setName(e.currentTarget.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        // 변경된 닉네임 값을 다시 전송해주는 자료 (Kkevi Do)\n        const variable = {\n            'name' : Name,\n            'id' : ID,\n        }\n\n        //alert창으로 유저에게 다시 한 번 변경 여부를 물어본 뒤, true값이라면\n        //Axios를 이용하여 변경된 유저 닉네임을 전송한다.\n        //(Kkevi Do)\n        if(window.confirm(`닉네임을 ${Name}(으)로 수정하시겠습니까?`) === true){\n            Axios.post(`/api/users/profile/${props.match.params.userId}`, variable)\n            .then(response => {\n                if(response.data.success === true){\n                    window.location.reload();   \n                }\n            })\n        }\n    }\n\n    \n    return (\n        <div className=\"myWrapper__container\">\n            <div className=\"myMy__title\">개인정보 설정</div>\n            <div className=\"myMy__contents\">\n            {Name && Email && \n                <div className=\"myMy__inputs\">\n                    <input value={Name} onChange={handleName} />\n                    <input value={Email} disabled />\n                </div>\n            }\n                <button onClick={handleSubmit}>수정</button>\n            </div>\n        </div>\n    )\n}\n\nexport default My\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from \"axios\";\n\nimport { EyeOutlined } from '@ant-design/icons';\n\nfunction LikeComponent(props) {\n\n    const history = useHistory();\n    const [LikeData, setLikeData] = useState([]);\n\n    //Axios를 이용하여 좋아요를 누른 값들을 가져오기 (Kkevi Do)\n    useEffect(() => {\n        Axios.get(`/api/users/profile/like/${history.location.pathname.split('/')[3]}`)\n            .then(response => {\n                setLikeData(response.data.result);\n            })\n    }, [LikeData, history])\n\n    return (\n        <div>\n            {LikeData.length === 0? <p className='noData'>좋아요를 누른 글이 없습니다.</p>\n                : LikeData && LikeData.map((itm, idx) => (\n                    <div className=\"myLike__list\">\n                        <div className=\"myLike__title\">\n                            <a href={`/detail/${itm.whichPost._id}`} target='blank'>{itm.whichPost.title}</a>\n                            <div>{itm.whichPost.createdAt.split('T')[0]}</div>\n                        </div>\n                        <div className=\"myLike__descriptions\">\n                            <div>{itm.whichPost.description}</div>\n                            <div className=\"myLike__numbers\">\n                                <div><EyeOutlined /> {itm.whichPost.views}</div>\n                            </div>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default LikeComponent\n","import React from 'react';\n\nimport LikeComponent from './LikeComponent';\n\nfunction Like(props) {\n\n    return (\n        <div className=\"myWrapper__container\">\n            <div className=\"myMy__title\">좋아요 한 글 보기</div>\n            <div className=\"myLike__contents\">\n                <LikeComponent />\n            </div>\n        </div>\n    )\n}\n\nexport default Like\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from \"axios\";\n\nfunction CommentComponent(props) {\n\n    const history = useHistory();\n    const [CommentData, setCommentData] = useState([]);\n\n    //Axios를 이용하여 작성한 덧글 값들을 가져오기 (Kkevi Do)\n    useEffect(() => {\n        Axios.get(`/api/users/profile/comment/${history.location.pathname.split('/')[3]}`)\n            .then(response => {\n                setCommentData(response.data.result);\n            })\n    }, [CommentData, history])\n\n\n    return (\n        <div>\n            {CommentData.length === 0? <p className='noData'>작성한 덧글이 없습니다.</p>\n                : CommentData && CommentData.map((itm, idx) => (\n                    <div className=\"myComment__list\">\n                        <a href={`/detail/${itm.postId._id}`} target='blank'>{itm.content}</a>\n                        <div>{itm.createdAt.split('T')[0]}</div>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default CommentComponent\n","import React from 'react';\n\nimport CommentComponent from './CommentComponent';\n\nfunction Comment() {\n    return (\n        <div className=\"myWrapper__container\">\n            <div className=\"myMy__title\">작성 덧글</div>\n            <div className=\"myComment_contents\">\n                <CommentComponent />\n            </div>\n           \n        </div>\n    )\n}\n\nexport default Comment\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\n\nimport Menu from './Sections/Menu';\nimport My from './Sections/My';\nimport Like from './Sections/Like';\nimport Comment from './Sections/Comment';\n\nimport \"../../Scss/Profile.scss\";\n\nfunction Profile(props) {\n    return (\n        <div className=\"register_my__container\">\n            {/* props로 받아온 유저정보를 화면에 렌더링함 (Kkevi Do) */}\n            {props.user.userData && \n                <div className=\"register_my__wrapper\">\n                    <div className=\"register_my__wrapper-title\"><p>{props.user.userData.name}</p></div>\n                    <div className=\"myWrapper\">\n                        <Menu\n                            id={props.user.userData._id}\n                            name={props.user.userData.name}\n                            email={props.user.userData.email}\n                        />\n                        <Switch>\n                            <Route exact path=\"/profile/:userId\" component={My} />\n                            <Route path=\"/profile/like/:userId\" component={Like} />\n                            <Route path=\"/profile/comment/:userId\" component={Comment} />\n                        </Switch>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport { useSelector } from 'react-redux';\n\nimport LandingCards from '../LandingPage/Sections/LandingCards';\n\nimport { Row , Col } from 'antd';\nimport styled from 'styled-components';\n\nfunction Search() {\n\n    //redux에 저장되어있는 검색값을 가져오기 (Kkevi Do)\n    const searched = useSelector(state => state.post);\n\n    return (\n        <SearchedResult>\n            {/* 삼항연산자를 이용하여 검색결과를 보여주기 (Kkevi Do) */}\n            {searched.searchedPost && searched.searchedPost ?\n                <Row gutter={[24, 24]} style={{margin: \"0px 30px\"}}>\n                {searched.searchedPost.map((item, idx)=> (\n                    <Col key={idx} xl = {6} lg={8} md={12} xs={24}>\n                        <LandingCards\n                            id={item._id}\n                            title={item.title}\n                            views={item.views}\n                            creator={item.creator}\n                            createdAt={item.createdAt}\n                            description={item.description}\n                            category={item.category}\n                            imgSrc={item.postImg}\n                        />\n                    </Col>\n                ))}\n            </Row>\n            : <NoSearched>검색결과가 없습니다.</NoSearched>\n        }\n        </SearchedResult>\n    )\n}\n\nexport default Search\n\nconst SearchedResult = styled.div`\n    margin-top: 40px;\n`;\n\nconst NoSearched = styled.p`\n    text-align: center;\n    margin: 200px 0 250px 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport '../../Scss/Posting.scss';\n\n\nfunction Posting(props) {\n    \n    const [Title, setTitle] = useState(\"\");\n    const [Description, setDescription] = useState(\"\");\n    const [Category, setCategory] = useState(0);\n    const [Image, setImage] = useState(\"\");\n    const [UserInfo, setUserInfo] = useState([]);\n\n    //유저 정보를 가져오는 API (Kkevi Do)\n    useEffect(() => {\n        Axios.get(\"/api/users/auth\")\n            .then(response => {\n                setUserInfo(response.data);\n            });\n    }, [])\n\n    //실시간으로 input 내용을 감지 (Kkevi Do)\n    const handleTitle = (e) => {\n        e.preventDefault();\n        setTitle(e.currentTarget.value);\n    }\n\n    //실시간으로 input 내용을 감지 (Kkevi Do)\n    const handleDescription = (e) => {\n        e.preventDefault();\n        setDescription(e.currentTarget.value);\n    }\n\n    //카테고리 값을 변동할 수 있도록 제어 (Kkevi Do)\n    const handleCategory = (e) => {\n        setCategory({ value: e.target.value });\n    }\n\n    //글작성 API (Kkevi Do)\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        //작성한 글 정보들(제목, 내용, 카테고리, 작성자 등등)을 전송해주는 자료 (Kkevi Do)\n        const variable = {\n            \"title\": Title,\n            \"description\": Description,\n            \"category\": Number(Category.value),\n            \"imgUrl\" : Image,\n            \"creator\": UserInfo.name,\n        }\n\n        Axios.post(`/api/post/create`, variable)\n            .then(response => {\n                if(response.data.success){\n                    props.history.push(\"/\");\n                } else {\n                    alert(\"포스팅에 실패하였습니다.\");\n                }\n        })\n    }\n\n    //글 작성을 취소할 시 확인문구\n    const handleCancel = (e) => {\n        e.preventDefault();\n\n        if(window.confirm(\"작성 중인 글은 저장되지 않습니다. 계속하시겠습니까?\") === true){\n            props.history.push(`/detail/${props.match.params.id}`)\n        }else{\n            return false;\n        }\n    }\n\n\n    const categoryOptions = [\n        { value : 0, label : \"HTML/CSS\" },\n        { value : 1, label : \"Js\" },\n        { value : 2, label : \"React\" },\n        { value : 3, label : \"Node/Express\" },\n        { value : 4, label : \"MongoDB\" },\n        { value : 5, label : \"Git/GitHub\" },\n        { value : 6, label : \"HTTP\" },\n        { value : 7, label : \"Algorithm\" },\n        { value : 8, label : \"AWS\" },\n        { value : 9, label : \"Network\" },\n    ]\n\n    //React-Dropzone을 활용해 이미지를 끌어 올릴 수 있도록 함. (Blockmonkey);\n    //header 설정을 multipart/form-data로 함으로써 이미지 데이터임을 표시하고, (Blockmonkey);\n    //Dropzone에 Form데이터를 생성해, 이미지는 1개만 올릴 수 있도록 올린 파일의 [0]번째 값만을 추가함. (Blockmonkey);\n    //그렇게 저장한 이미지를 백엔드의 이미지 업로드 API로 전송하면 S3버킷에 올리는 작업을 함. (Blockmonkey);\n    const imgDropHandler = (file) => {\n        let formData = new FormData();\n        const config = {\n            header: {\"content-type\": \"multipart/form-data\"}\n        };\n        formData.append(\"postImg\", file[0])\n\n        Axios.post(\"/api/post/uploadImg\", formData, config)\n            .then(response => {\n                setImage(response.data.img);\n            });\n    };\n\n    return (\n        <div className='postingWrapper'>\n            <div className='postingContents'>\n                <div className='postingContents__column'>\n                    <select className='postingCategory' onChange={handleCategory}>\n                        {categoryOptions.map((item, idx) => (\n                            <option value={item.value}>{categoryOptions[idx].label}</option>\n                        ))}\n                    </select>\n\n                    <input className='postingTitle' type=\"text\" placeholder=\"제목을 입력해주세요.\" value={Title} onChange={handleTitle} />\n\n                    <Dropzone onDrop={imgDropHandler}>\n                        {({getRootProps, getInputProps}) => (\n                            <section>\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()}/>\n                                    <FileAddOutlined style={{ fontSize: \"35px\" }} />\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n\n                {/* 드랍존에 넣으면 옆에 이미지가 출력되기 위한 이미지태그. (Blockmoneky) */}\n                <div className='postingImg_Container'>\n                    <img src={Image} alt=\"\"/>\n                </div>\n                \n                <textarea className='postingTextarea' placeholder=\"내용을 입력하세요.\" value={Description} onChange={handleDescription}></textarea>\n\n                <div className='postingContents_footer'>\n                    <button className='postingBtn cancelBtn' onClick={handleCancel}>취소</button>\n                    <button className='postingBtn' onClick={handleSubmit}>작성</button>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Posting)\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from \"../../actions/user_action\";\nimport Axios from 'axios';\n\nimport '../../Scss/Register.scss';\n\n\nfunction Register(props) {\n\n    const dispatch = useDispatch();\n\n    const [Name, setName] = useState(\"\");\n    const [CheckName, setCheckName] = useState(\"\");\n    const [Email, setEmail] = useState(\"\");\n    const [CheckEmail, setCheckEmail] = useState(\"\");\n    const [Pwd, setPwd] = useState(\"\");\n    const [VerifyPwd, setVerifyPwd] = useState(\"\")\n\n\n    //사용자가 입력한 닉네임과 이메일값이 이미 회원가입되어있는 유저와 중복되는 검사 (Kkevi Do)\n    useEffect(() => {\n\n      let nameCheck = {\n        name : Name,\n      }\n      let emailCheck = {\n        email : Email,\n      }\n\n      //닉네임 중복 체크 API\n      Axios.post('/api/users/checkname', nameCheck)\n        .then(response => {\n          if(response.data.result.length > 0){\n            setCheckName(\"이미 사용중인 닉네임입니다.\");\n          }else{\n            setCheckName(\"\");\n          }\n        })\n\n      //이메일 중복 체크 API\n      Axios.post('/api/users/checkemail', emailCheck)\n       .then(response => {\n          if(response.data.result.length > 0){\n            setCheckEmail(\"이미 사용중인 이메일입니다.\")\n          }else{\n            setCheckName(\"\");\n          }\n        })\n      \n    }, [Email, Name])\n\n    \n    const emailHandler = (e) => {\n      setEmail(e.currentTarget.value);\n    }\n    const NameHandler = (e) => {\n        setName(e.currentTarget.value);\n    }\n    const pwdHandler = (e) => {\n      setPwd(e.currentTarget.value);\n    }\n    const VerifyPwdHandler = (e) => {\n      setVerifyPwd(e.currentTarget.value);\n    }\n\n\n    const submitHandler = (e) => {\n      e.preventDefault();\n      if(Pwd !== VerifyPwd ){\n        //비밀번호 확인 불일치\n        console.log(`비밀번호를 다시 확인해주세요.`);\n      } else {\n        //비밀번호 확인 일치\n        let dataToSubmit = {\n          email : Email,\n          name : Name,\n          password : Pwd,\n        } \n        dispatch(registerUser(dataToSubmit))\n          .then(response => {\n            if(response.payload.success){\n              alert('회원가입에 성공하였습니다.');\n              props.history.push('/');\n            } else {\n              alert('회원가입에 실패하였습니다.');\n            }\n          });\n      }\n    };\n\n\n    return (\n        <div className=\"register_my__container\" onSubmit={submitHandler}>\n          <div className=\"register_my__wrapper\">\n              <div className=\"register_my__wrapper-title\" >Register in NINJA CODERS</div>\n              <div className=\"registerWrapper\">\n                  <div className=\"registerWrapper_column\">\n                      <div>Nick name</div>\n                      <input type=\"text\" minLength=\"2\" maxLength=\"20\" required placeholder=\"닉네임은 두 글자 이상이어야 합니다.\" value={Name} onChange={NameHandler} />\n                      <div>{CheckName}</div>\n                  </div>\n                  <div className=\"registerWrapper_column\">\n                      <div>E-mail</div>\n                      <input type=\"email\" minLength=\"10\" maxLength=\"30\" required placeholder=\"이메일을 입력하세요.\"  value={Email} onChange={emailHandler}/>\n                      <div>{CheckEmail}</div>\n                  </div>\n                  <div className=\"registerWrapper_column\">\n                      <div>Password</div>\n                      <input type=\"password\" minLength=\"8\" required placeholder=\"비밀번호는 8자~30자 이내로 작성해야 합니다.\" value={Pwd} onChange={pwdHandler}/>\n                      {Pwd.length < 8 ? <div>비밀번호는 8글자 이상이어야 합니다!</div> : null}\n                  </div>\n                  <div className=\"registerWrapper_column\">\n                      <div>Verify Password</div>\n                      <input type=\"password\" minLength=\"8\" required placeholder=\"비밀번호 확인을 위해 다시 입력해주세요.\" value={VerifyPwd} onChange={VerifyPwdHandler}/>\n                      {Pwd !== VerifyPwd ? <div>비밀번호가 일치하지 않습니다!</div> : null}\n                  </div>\n              </div>\n          </div>\n          <div className=\"registerWrapper_btn\" >\n              <button onClick={()=> props.history.goBack()}>취소</button>\n              <button type=\"submit\" onClick={submitHandler}>확인</button>\n          </div>\n        </div>\n    )\n}\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nimport { FileAddOutlined } from \"@ant-design/icons\";\nimport '../../Scss/Posting.scss';\n\n\nfunction ModifyPost(props) {\n    const [Image, setImage] = useState(\"\");\n    const [EditTitle, setEditTitle] = useState('');\n    const [EditDescription, setEditDescription] = useState('');\n    const [EditCategory, setEditCategory] = useState(0);\n\n    //수정 하고자 하는 해당 게시글을 불러오는 API\n    //(Kkevi Do)\n    useEffect(() => {\n        Axios.get(`/api/post/postDetail/${props.match.params.id}`)\n            .then(response => {\n                console.log(response);\n                setEditTitle(response.data.post.title);\n                setEditDescription(response.data.post.description);\n                setEditCategory(response.data.post.category);\n            })\n    }, [props])\n\n    //실시간으로 input 내용을 감지 (Kkevi Do)\n    const handleTitle = (e) => {\n        e.preventDefault();\n        setEditTitle(e.currentTarget.value);\n    }\n\n    //실시간으로 input 내용을 감지 (Kkevi Do)\n    const handleDescription = (e) => {\n        e.preventDefault();\n        setEditDescription(e.currentTarget.value);\n    }\n\n    //실시간으로 input 내용을 감지 (Kkevi Do)\n    const handleCategory = (e) => {\n        setEditCategory({ value: e.target.value, label: e.target.label });\n    }\n\n    //글수정 API (Kkevi Do)\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        //작성한 글 정보들(제목, 내용, 카테고리, 작성자 등등)을 전송해주는 자료 (Kkevi Do)\n        const variable = {\n            \"title\": EditTitle,\n            \"description\": EditDescription,\n            \"category\": Number(EditCategory.value),\n        }\n\n        Axios.post(`/api/post/update/${props.match.params.id}`, variable)\n            .then(response => {\n                if(response.data.success){\n                    props.history.push(`/detail/${props.match.params.id}`);\n                } else {\n                    alert(\"수정에 실패하였습니다.\");\n                }\n        })\n    }\n\n    //글 작성을 취소할 시 확인문구\n    const handleCancel = (e) => {\n        e.preventDefault();\n\n        if(window.confirm(\"작성 중인 글은 저장되지 않습니다. 계속하시겠습니까?\") === true){\n            props.history.push(`/detail/${props.match.params.id}`)\n        }else{\n            return false;\n        }\n    }\n\n    const categoryOptions = [\n        { value : 0, label : \"HTML/CSS\" },\n        { value : 1, label : \"Js\" },\n        { value : 2, label : \"React\" },\n        { value : 3, label : \"Node/Express\" },\n        { value : 4, label : \"MongoDB\" },\n        { value : 5, label : \"Git/GitHub\" },\n        { value : 6, label : \"HTTP\" },\n        { value : 7, label : \"Algorithm\" },\n        { value : 8, label : \"AWS\" },\n        { value : 9, label : \"Network\" },\n    ]\n\n    //드랍존에 이미지를 올리고 난 뒤, header[config]설정 및 이미지 form-data를 이미지 S3저장 API에 전송 후, (Blockmonkey);\n    //저장된 이미지를 response로 받아옴 (Blockmonkey);\n    const imgDropHandler = (file) => {\n        let formData = new FormData();\n        const config = {\n            header: {\"content-type\": \"multipart/form-data\"}\n        };\n        formData.append(\"postImg\", file[0])\n\n        Axios.post(\"/api/post/uploadImg\", formData, config)\n            .then(response => {\n                setImage(response.data.img);\n            });\n    };\n\n    return (\n        <div className='postingWrapper'>\n            <div className='postingContents'>\n                <div className='postingContents__column'>\n                    <select className='postingCategory' value={EditCategory} onChange={handleCategory}>\n                        {categoryOptions.map((item, idx) => (\n                            <option value={item.value} >{categoryOptions[idx].label}</option>\n                        ))}\n                    </select>\n\n                    <input className='postingTitle' type=\"text\" placeholder=\"제목을 입력해주세요.\" value={EditTitle} onChange={handleTitle} />\n\n                    <Dropzone onDrop={imgDropHandler}>\n                        {({getRootProps, getInputProps}) => (\n                            <section>\n                                <div {...getRootProps()}>\n                                    <input {...getInputProps()}/>\n                                    <FileAddOutlined style={{ fontSize: \"35px\" }} />\n                                </div>\n                            </section>\n                        )}\n                    </Dropzone>\n                </div>\n\n                {/* 드랍존에 넣으면 옆에 이미지가 출력되기 위한 코드.\n                Image 상태값에 이미지를 S3에 올린 뒤, 파일을 받아와서 이미지를 띄워준다.\n                (추가: S3에 올리고 난 뒤 만약, 다른 이미지를 올리면 S3에 기존 이미지가 그대로 남아있다. 개선여부는?)\n                (Blockmonkey); */}\n                \n                <div className='postingImg_Container'>\n                    <img src={Image} alt=\"\"/>\n                </div>\n                \n                <textarea className='postingTextarea' placeholder=\"내용을 입력하세요.\" value={EditDescription} onChange={handleDescription}></textarea>\n\n                <div className='postingContents_footer'>\n                    <button className='postingBtn cancelBtn' onClick={handleCancel}>취소</button>\n                    <button className='postingBtn' onClick={handleSubmit}>수정</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ModifyPost)\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authUser } from \"../actions/user_action\";\n\n\n// null(아무나), true(로그인유저), false(로그인하지않은 유저)\n// admin유저의 경우 admin을 true로 전달해주면 된다. 평시에는 null;\n// (Blockmonkey);\nexport default function(SpecificComponent, option, admin=null){\n    function AuthCheck(props){\n        const dispatch = useDispatch();\n        let user = useSelector(state => state.user);\n        //Node의 Auth API로 리퀘스트를 보내 현재상태 수신.\n        useEffect(() => {\n            dispatch(authUser()).then(response => {\n                if(!response.payload.is_login){\n                    //비로그인 유저\n                    if(option){\n                        props.history.push(\"/\");\n                    }\n                } else {\n                    //로그인한 상태\n                    if(admin && !response.payload.isAdmin){\n                        props.history.push(\"/\");\n                    } else {\n                        if(option === false){\n                            props.history.push(\"/\");\n                        }\n                    }\n                }\n            })\n        }, []);\n\n        return (\n            //위 권한문제에서 걸리지 않았다면, 원래 랜더링할 컴포넌트를 랜더링하는데 props값으로 user정보를 전달 & 기존의 props값을 모두 전달.\n            <SpecificComponent {...props} user={user}/>\n        )\n    }\n    return AuthCheck;\n}","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './Components/Header/Header';\nimport LandingPage from './Components/LandingPage/LandingPage';\nimport Contact from \"./Components/Contact/Contact\"\nimport Introduce from './Components/Introduce/Introduce';\nimport Portfolio from './Components/Portfolio/Portfolio';\nimport Footer from \"./Components/Footer/Footer\";\nimport Detail from \"./Components/Detail/Detail\";\nimport Profile from './Components/Profile/Profile';\nimport Search from './Components/Search/Search';\nimport Posting from './Components/Posting/Posting';\nimport Register from \"./Components/Register/register\";\nimport ModifyPost from './Components/Posting/ModifyPost';\nimport AuthCheck from \"./hoc/auth\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      {/* Switch는 조건에 맞는 component를 하나만 렌더링 시켜주는 역할을 한다. */}\n      <Switch>\n        {/* AuthCheck을 통해 유저의 권한을 확인한다. (null<아무나>, false<비로그인유저만>, true<로그인유저만>) */}\n        {/* 단, 세번째 인자 true는 admin 유저만 사용가능 한 것. */}\n        {/* (Blockmonkey) */}\n        <Route exact path='/' component={AuthCheck(LandingPage, null)}/>\n        <Route path='/introduce' component={AuthCheck(Introduce, null)}/>\n        <Route path='/portfolio' component={AuthCheck(Portfolio, null)}/>\n        <Route path='/contact' component={AuthCheck(Contact, null)}/>\n        <Route path='/detail/:id' component={AuthCheck(Detail, null)}/>\n        <Route path='/register' component={AuthCheck(Register, false)}/>\n        <Route path=\"/profile/:user\" component={AuthCheck(Profile, true)} />  \n        <Route path='/search' component={AuthCheck(Search, null)}/>\n        <Route path='/create' component={AuthCheck(Posting, true, true)} />\n        <Route path='/update/:id' component={AuthCheck(ModifyPost, true, true)} />\n      </Switch>\n    \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport user from './user_reducer';\nimport post from './post_reducer';\n\n//Reducer Store 설정.\n//원칙상 Redux Store는 하나만 받을 수 있어 CombineReducers를 활용해 user와, post 리듀서 두개를 포함시켰다. (Blockmonkey);\nconst rootReducer = combineReducers({\n   user,\n   post\n})\n\nexport default rootReducer;","import { LOGIN_USER, REGISTER_USER, LOGOUT_USER, AUTH_USER } from '../actions/types';\n\n//유저관련 리듀서 (Blockmonkey);\nexport default function(state = {}, action){\n    switch(action.type){\n        case LOGIN_USER:\n            return{\n                ...state,\n                loginSuccess: action.payload\n            }\n        case REGISTER_USER:\n            return{\n                ...state,\n                registerSuccess: action.payload\n            }\n        case LOGOUT_USER:\n            return{\n                ...state\n            }\n        case AUTH_USER:\n            return{\n                ...state,\n                userData: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { SEARCH } from '../actions/types';\n\n//글 검색 리듀서 (Blockmonkey);\n//이전 스테이트값과, searchedPost라는 이름으로 검색 API를 활용해 검색된 글들을 state값에 저장한다.\nexport default function(state = {}, action){\n    switch(action.type){\n        case SEARCH:\n            return{\n                ...state,\n                searchedPost: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport{ applyMiddleware, createStore } from 'redux'\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport rootReducer from './reducers/ConfigStore';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n  // 크롬 확장프로그램인 redux dev tool을 이용하기 위해 설정함 & redux store 기본설정 (Blockmonkey)\n  <Provider\n    store = {createStoreWithMiddleware(rootReducer,\n        window.__REDUX_DEVTOOLS_EXTENSION__&&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n      )}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}